name: build and test

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: build
        run: cargo build --verbose

      - name: cargo test
        run: cargo test --verbose

  doc:
    runs-on: ubuntu-22.04
    needs: build
    if: github.event_name == 'push' || github.event.pull_request.merged == true

    steps:
      - uses: actions/checkout@v3
      - name: Run doc
        run: cargo doc --no-deps

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc/
  
  tag:
    runs-on: ubuntu-22.04
    needs: build
    if: github.event_name == 'push' || github.event.pull_request.merged == true

    steps:
      - uses: actions/checkout@v3
      - name: check if `yotube_chat` depends on appropriate
      - uses: salsify/action-detect-and-tag-new-version@v2
        id: detect_tag_youtube_chat
        with:
          create-tag: false
          version-command: cd youtube_chat && cargo read-manifest | jq -r .version
      - uses: salsify/action-detect-and-tag-new-version@v2
        id: detect_tag_depending_youtube_chat_macro
        with:
          create-tag: false
          version-command: cd youtube_chat && cargo read-manifest | jq .dependencies | jq "map(select( .name == \"youtube_chat_macro\" ))" | jq -r .[0].req
      - uses: salsify/action-detect-and-tag-new-version@v2
        id: detect_tag_youtube_chat_macro
        with:
          create-tag: false
          version-command: cd youtube_chat_macro && cargo read-manifest | jq -r .version
      - run: |
        if [ ${{ steps.detect_tag_depending_youtube_chat_macro.outputs.current-version }} -eq ${{ steps.detect_tag_youtube_chat_macro.outputs.current-version }} ]; then
          # incompatible version
          exit 1
        fi

      - uses: mathieudutour/github-tag-action@v5.6
        with:
          custom_tag: ${{ steps.detect_tag.outputs.current-version }}
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        if: ${{ steps.detect_tag.outputs.previous-version != steps.detect_tag.outputs.current-version }}
